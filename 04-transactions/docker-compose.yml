services:
  01_no_tx:
    build: ./docker/service
    volumes:
      - ./01-no-tx:/app
      - go_pkg:/go/pkg
      - go_cache:/go-cache
    working_dir: /app
    ports:
      - 8101:8080
    networks:
      - apps
    restart: unless-stopped

  02_tx_in_logic:
    build: ./docker/service
    volumes:
      - ./02-tx-in-logic:/app
      - go_pkg:/go/pkg
      - go_cache:/go-cache
    working_dir: /app
    ports:
      - 8102:8080
    networks:
      - apps
    restart: unless-stopped

  03_tx_in_repo:
    build: ./docker/service
    volumes:
      - ./03-tx-in-repo:/app
      - go_pkg:/go/pkg
      - go_cache:/go-cache
    working_dir: /app
    ports:
      - 8103:8080
    networks:
      - apps
    restart: unless-stopped

  04_update_func_closure:
    build: ./docker/service
    volumes:
      - ./04-update-func-closure:/app
      - go_pkg:/go/pkg
      - go_cache:/go-cache
    working_dir: /app
    ports:
      - 8104:8080
    networks:
      - apps
    restart: unless-stopped

  05_tx_provider:
    build: ./docker/service
    volumes:
      - ./05-tx-provider:/app
      - go_pkg:/go/pkg
      - go_cache:/go-cache
    working_dir: /app
    ports:
      - 8105:8080
    networks:
      - apps
    restart: unless-stopped

  06_distributed_monolith_orders:
    build: ./docker/service
    volumes:
      - ./06-distributed-monolith/orders-svc:/app
      - go_pkg:/go/pkg
      - go_cache:/go-cache
    working_dir: /app
    ports:
      - 8161:8080
    networks:
      - apps
    restart: unless-stopped

  06_distributed_monolith_users:
    build: ./docker/service
    volumes:
      - ./06-distributed-monolith/users-svc:/app
      - go_pkg:/go/pkg
      - go_cache:/go-cache
    working_dir: /app
    ports:
      - 8162:8080
    networks:
      - apps
    restart: unless-stopped

  07_eventual_consistency_orders:
    build: ./docker/service
    volumes:
      - ./07-eventual-consistency/orders-svc:/app
      - go_pkg:/go/pkg
      - go_cache:/go-cache
    working_dir: /app
    ports:
      - 8171:8080
    networks:
      - apps
    restart: unless-stopped

  07_eventual_consistency_users:
    build: ./docker/service
    volumes:
      - ./07-eventual-consistency/users-svc:/app
      - go_pkg:/go/pkg
      - go_cache:/go-cache
    working_dir: /app
    ports:
      - 8172:8080
    networks:
      - apps
    restart: unless-stopped

  08_outbox_orders:
    build: ./docker/service
    volumes:
      - ./08-outbox/orders-svc:/app
      - go_pkg:/go/pkg
      - go_cache:/go-cache
    working_dir: /app
    ports:
      - 8181:8080
    networks:
      - apps
    restart: unless-stopped

  08_outbox_users:
    build: ./docker/service
    volumes:
      - ./08-outbox/users-svc:/app
      - go_pkg:/go/pkg
      - go_cache:/go-cache
    working_dir: /app
    ports:
      - 8182:8080
    networks:
      - apps
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    networks:
      - apps
    restart: unless-stopped

  postgres-orders:
    image: postgres:15
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5433:5432
    networks:
      - apps
    restart: unless-stopped

  postgres-users:
    image: postgres:15
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5434:5432
    networks:
      - apps
    restart: unless-stopped

  redis-a:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    networks:
      - apps
    restart: unless-stopped

  redis-b:
    image: redis:6-alpine
    ports:
      - "6380:6379"
    networks:
      - apps
    restart: unless-stopped

networks:
  apps:

volumes:
  go_pkg:
  go_cache:
